clc; clear all; close all;
load('monkeydata_training.mat')


%% get training data: for 1 angle, for a 20ms bin, 98 features (spike train) x 100 trials
M=zeros(98,100); 
N= zeros(2,100);
for n= 1: 100
    firing_rate = compute_rate(trial(n,1).spikes(:,300:319));
    M(:,n)=firing_rate;
    
    velocity=trial(n,1).handPos(1:2,319)-trial(n,1).handPos(1:2,300);
    N(:,n) = velocity;
end


 spikes_train=M';
 pos_train=N';



%%  regression

posX_train= pos_train (:,1);
posY_train= pos_train (:,2);

% for x
Wx = fitrsvm(spikes_train , posX_train);

%for y
Wy = fitrsvm(spikes_train , posY_train);

%%  testing data. same but 1 time step later
M=zeros(98,100); 
N= zeros(2,100);
for n= 1: 100
    M(:,n)=trial(n,1).spikes(:,2);
    N(:,n) = trial(n,1).handPos(1:2,3);
end

spikes_test=M';
pos_test=N';



%%  testing data. same but 1 time step later
M=zeros(98,100); 
N= zeros(2,100);
for n= 1: 100
    firing_rate = compute_rate(trial(n,1).spikes(:,320:339));
    M(:,n)=firing_rate;
    
    velocity=trial(n,1).handPos(1:2,339)-trial(n,1).handPos(1:2,320);
    N(:,n) = velocity;
end

spikes_test=M';
pos_test=N';

Xpos_predicted = predict(Wx, spikes_test);
Ypos_predicted = predict(Wy, spikes_test);

delta_x=pos_test(:,1)-Xpos_predicted;
delta_y=pos_test(:,2)-Ypos_predicted;
